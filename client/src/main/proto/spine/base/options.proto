//
// Copyright 2016, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

// We do not define package here to allow users use these options without package, e.g.
// (required = true) instead of (spine.base.required = true)
// package spine.base;

extend google.protobuf.MessageOptions {
    string err = 51001;
}

extend google.protobuf.FieldOptions {
    RequiredOption required = 51002;
    DecimalOption decimal = 51003;
    DigitsOption digits = 51004;
    TimeOption when = 51006;
    MaxOption max = 51007;
    MinOption min = 51008;
    PatternOption pattern = 51009;
}

message RequiredOption {
    option (err) = "Field must be set";

    bool value = 1;
    string err = 2;
}

// we can have Option suffix here, because we don't need name to define values [IN PROTOBUF]
message DecimalOption {
    option (err) = "Field value must fit into range";

    int32 min = 1;
    int32 max = 2;
    bool inclusive = 3;
    string err = 4;
}

// we can have Option suffix here, because we don't need name to define values [IN PROTOBUF]
message DigitsOption {
    option (err) = "Field should have valid digital value";

    int32 integer = 1;
    int32 fraction = 2;
    string err = 3;
}

message TimeOption {
    option (err) = "Inappropriate time";

    Time in = 1;
    string err = 2;
}

// we can NOT have Option suffix here, because user will be using Time.FUTURE syntax [IN PROTOBUF]
enum Time {
    UNDEFINED = 0;
    PAST = 1;
    FUTURE = 2;
}

// we can have Option suffix here, because we don't need name to define values [IN PROTOBUF]
message PatternOption {
    option (err) = "Field should match pattern";

    string regex = 1;
    int32 flag = 2;
    string err = 3;
}

message MinOption {
    option (err) = "Field must be larger than min value";

    double value = 1;
    string err = 2;
}

message MaxOption {
    option (err) = "Field should be less than max value";

    double value = 1;
    string err = 2;
}

// we can even specify package for XxxOption messages

// for java code we will require full names

// Time in root package may collide with something
option java_generate_equals_and_hash = false;
option java_multiple_files = true;
option java_outer_classname = "OptionsProto";
option java_package = "org.spine3.base";

import "google/protobuf/descriptor.proto";

