//
// Copyright 2015, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.client;

option java_generate_equals_and_hash = true;
option java_multiple_files = true;
option java_outer_classname = "ClientServiceProto";

// We put gRPC-based classes into `grpc` sub-package, which is annotated as `@Internal` to hide implementation details
// from the public API of the framework.
option java_package = "org.spine3.client.grpc";

import public "spine/client/client.proto";
import public "spine/client/command_request.proto";
import public "spine/client/command_response.proto";

// A service for sending commands from clients.
 service ClientService {
    // Connects the client to the service.
    rpc Connect(ClientRequest) returns (Connection);

    // Request to handle a command.
    rpc Handle(CommandRequest) returns (CommandResponse);

    // Opens the event stream from the server.
    rpc Open(Connection) returns (stream spine.base.EventRecord);
 }
