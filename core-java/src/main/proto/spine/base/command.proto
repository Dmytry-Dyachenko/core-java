//
// Copyright 2016, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.base;

option java_generate_equals_and_hash = true;
option java_multiple_files = true;
option java_outer_classname = "CommandProto";
option java_package = "org.spine3.base";

import public "google/protobuf/timestamp.proto";
import public "google/protobuf/any.proto";

import public "spine/base/user_id.proto";
import public "spine/time/time.proto";
import public "spine/base/namespace.proto";

// The command identifier is a composite key, which gives information about the context of the command creation.
message CommandId {
    // The user who created the command.
    UserId actor = 1;

    // Date/time at which the command was created.
    google.protobuf.Timestamp timestamp = 2;
}

// Meta-information about the client environment, which generated a command.
message CommandContext {
    // The id of the command.
    CommandId command_id = 1;

    // The zone offset from which the command is made.
    time.ZoneOffset zone_offset = 2;

    // The `namespace` attribute must be defined for commands in multitenant applications.
    Namespace namespace = 3;
}

// Enumeration of possible failures when validating a command.
enum CommandValidationError {
    // Reserved value.
    UNKNOWN = 0;

    // The command type is not supported by the server.
    UNSUPPORTED_COMMAND = 1;

    // The command is supported but not all required fields are populated.
    INCOMPLETE_COMMAND = 2;

    // The command context does not have `namespace` attribute defined in a multitenant application.
    NAMESPACE_UNKNOWN = 3;
}
