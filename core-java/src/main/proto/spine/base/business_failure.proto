//
// Copyright 2015, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.base;

option java_generate_equals_and_hash = true;
option java_multiple_files = true;
option java_outer_classname = "BusinessFailureProto";
option java_package = "org.spine3.base";

import public "google/protobuf/struct.proto";

// A business failure represents a condition in business, which does not allow to satisfy a request.
//
// Examples: unsuccessful credit card validation, insufficient items in stock, incomplete order data.
//
// See `spine.base.Error` for definition of a technical error.
//
message BusinessFailure {
    oneof kind {
        // An integer failure code.
        int32 code = 1;

        // A failure type from a high-level programming language.
        string type = 2;
    }

    reserved 3 to 9; // for other possible kinds.

    // A developer-readable diagnostics message of the failure.
    // This message is not translated to the language of the end user.
    string message = 10;

    // Additional information on the failure.
    map<string, google.protobuf.Value> attributes = 11;

    // A stacktrace of an exception (if available).
    string stacktrace = 12;
}