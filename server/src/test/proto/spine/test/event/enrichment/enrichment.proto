//
// Copyright 2017, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.test.event.enrichment;

option (type_url_prefix) = "type.spine3.org";
option java_package="org.spine3.test.event.enrichment";
option java_multiple_files = true;

import "spine/annotations.proto";
import "spine/enrichment_annotations.proto";
import "spine/time/zone_offset.proto";

message ProjectCreatedEnrichmentAnotherPackage {
    option (enrichment_for) = "spine.test.event.ProjectCreated";

    string project_name = 1 [(by) = "project_id"];
}

message ProjectCreatedEnrichmentAnotherPackageFqn {
    string project_name = 1 [(by) = "spine.test.event.ProjectCreated.project_id"];
}

message ProjectCreatedEnrichmentAnotherPackageFqnAndMsgOpt {
    option (enrichment_for) = "spine.test.event.ProjectCreated";

    string project_name = 1 [(by) = "spine.test.event.ProjectCreated.project_id"];
}

// Enrichment for all the event in the "spine.test.event.user" package.
// See {@code EventEnrichmentsMapShould#contain_all_events_from_package_by_one_enrichment} test.
message UserPackageEventsEnrichment {
    option (enrichment_for) = "spine.test.event.user.*";

    spine.time.ZoneOffset time_zone = 1 [(by) = "*.user_uid"];
}
