//
// Copyright 2016, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary forms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
syntax = "proto3";

package spine.server.storage;

option java_package = "org.spine3.server.storage";
option java_multiple_files = true;
option java_outer_classname = "EventStorageProto";
option java_generate_equals_and_hash = true;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";

import "spine/base/event.proto";

// This type defines the way events are stored in event storage.
// Some of the fields are defined as string representation of corresponding message types
// so that these fields are available for querying.
message EventStorageRecord {
    // A moment of time when the event occurred.
    google.protobuf.Timestamp timestamp = 1;

    // A short name of Protobuf type of the event.
    string event_type = 2;

    // String representation of ID of the aggregate or another entity, which generated the event.
    string producer_id = 3;

    // String representation of `EventId`.
    string event_id = 4;

    reserved 5 to 19;

    // Event instance.
    google.protobuf.Any message = 20;

    // Event context.
    spine.base.EventContext context = 21;
}
